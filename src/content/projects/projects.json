[
  {
    "description": "Centerix Omnichannel is a powerful, enterprise-grade multi-channel customer support platform designed for large organizations with hundreds of agents across industries like banking, insurance, and finance. The platform empowers support agents, telemarketers, and collection teams with tools to manage customer communication across voice, chat, and messaging — while giving managers and supervisors comprehensive oversight and reporting capabilities.\n\nOne of the standout features of Centerix is its robust telephony system, built using SIP (Session Initiation Protocol) and WebRTC. It supports both manual and automated dialing, real-time call monitoring, call transfers, and supervisor coaching. The system also includes an IVR (Interactive Voice Response) menu, plus an AI-powered speech-to-text engine for transcribing conversations in real time, enhancing both accessibility and quality assurance.\n\nOn the messaging side, Centerix integrates with major channels such as WhatsApp, Facebook, Instagram, and email, enabling agents to manage conversations in a unified interface. The platform supports ticketing workflows, automated AI chatbots, and smart routing — ensuring efficient handling of high volumes of queries.\n\nFor performance management, Centerix includes a built-in QA and scoring system that evaluates agent performance based on pre-set criteria. It also offers powerful real-time dashboards and detailed reporting tools, enabling supervisors to track KPIs, campaign effectiveness, and individual agent productivity.\n\nI was deeply involved in the frontend development, building and integrating all UI components using JavaScript, React, JsSIP, WebRTC, and Socket.IO to support real-time telephony and messaging features. I also contributed significantly to the backend, working with Node.js, Express, and PostgreSQL, and played a key role in migrating the legacy C# + Microsoft SQL Server codebase into a modern, scalable Node.js + PostgreSQL backend. I developed and tested numerous APIs, ensuring a seamless transition while improving maintainability and performance.",

    "images": [
      "https://i.imgur.com/hpAXEXT.jpeg",
      "https://i.imgur.com/zXMZcmA.jpeg",
      "https://i.imgur.com/3H3Z0Qa.jpeg",
      "https://i.imgur.com/UbDYwsT.png",
      "https://i.imgur.com/9E7hFNl.jpeg",
      "https://i.imgur.com/XVQ6rXJ.jpeg",
      "https://i.imgur.com/JPEJCWu.jpeg",
      "https://i.imgur.com/LwIavtL.jpeg",
      "https://i.imgur.com/0j3fDIH.jpeg",
      "https://i.imgur.com/sMvPQAS.jpeg",
      "https://i.imgur.com/G1v3cE1.jpeg",
      "https://i.imgur.com/cA4aZJk.jpeg",
      "https://i.imgur.com/BEFp2Rh.jpeg",
      "https://i.imgur.com/0Ic1qaF.jpeg",
      "https://i.imgur.com/AggbsXt.jpeg",
      "https://i.imgur.com/UgYzrj4.jpeg"
    ],

    "stacks": [
      "JavaScript",
      "React",
      "Node.js",
      "Express",
      "PostgreSQL",
      "Redux",
      "JsSIP",
      "WebRTC",
      "Socket.IO"
    ],

    "summary": "Centerix Omnichannel is an enterprise-level customer support platform with integrated voice, messaging, QA, and reporting systems — where I led frontend development and contributed to backend migration from C# to Node.js, supporting real-time communications at scale.",
    "thumbnail": "https://i.imgur.com/hpAXEXT.jpeg",
    "title": "Centerix Omnichannel",
    "year": "2023-on"
  },

  {
    "description": "Centerix Field App is a cross-platform mobile application developed specifically for field agents involved in debt collection, customer surveys, and in-person follow-ups. Seamlessly integrated with Centerix Omnichannel, the app enables real-time task assignment, visit reporting, and agent location tracking — allowing managers to monitor field operations with precision and efficiency.\n\nThe app is equipped with a range of field specific features, including support for multiple photo and video captures per visit, Google Maps integration for location info and directions, geolocation tagging for media files to verify visit authenticity, and an integrated media compression system to ensure fast and lightweight uploads even on low-bandwidth connections. These capabilities help field agents report tasks quickly and reliably, while minimizing data usage.\n\nDesigned to support Android, iOS, and web, the frontend was developed using TypeScript and React, with Ionic Framework and Capacitor + Cordova for native builds and access to device features. The backend was built using Node.js, Express, and PostgreSQL, and the app was deployed using Ionic Appflow, enabling smooth live updates and rapid bug fixes without full redeployment.\n\nThis project was a solo effort — I was responsible for the entire app lifecycle, from UI/UX design and development to integration, testing, deployment, and ongoing maintenance.",

    "images": [
      "https://i.imgur.com/GXCnhTG.png",
      "https://i.imgur.com/wN0V2jC.png",
      "https://i.imgur.com/ZAtFopy.png",
      "https://i.imgur.com/0AmVoNt.png",
      "https://i.imgur.com/jFfx42h.png",
      "https://i.imgur.com/xrQwXOE.png"
    ],

    "stacks": [
      "JavaScript",
      "TypeScript",
      "React",
      "Ionic",
      "Capacitor",
      "Cordova",
      "Node.js",
      "Express",
      "PostgreSQL"
    ],

    "summary": "Centerix Field App is a cross-platform mobile tool for field collection agents, built with React, Ionic, and Node.js, featuring media capture, geolocation, and real-time integration — fully designed and developed by myself from start to finish.",
    "thumbnail": "https://i.imgur.com/0AmVoNt.png",
    "title": "Centerix Field App",
    "year": "2024-on"
  },

  {
    "description": "Felini Furniture is a full-featured product showcase and company profile website designed to highlight a local furniture brand’s catalog and online presence. In addition to standard company profile sections, the site includes a shop page where visitors can browse products and easily connect to e-commerce platforms or initiate purchases via WhatsApp.\n\nThe project was built entirely by myself from design and development to testing, deployment, and infrastructure setup — including hosting, domain configuration, and company email. The frontend is built with React, Next.js, and Tailwind CSS, delivering a fast and responsive user experience.\n\nTo support dynamic content, I developed a custom content management system using Strapi, Node.js, and MySQL. This CMS allows the client to manage pages, product listings, SEO settings, and user roles, providing full control over their site without technical involvement.",

    "images": [
      "https://i.imgur.com/1pfyexg.jpeg",
      "https://i.imgur.com/xTyVtG3.jpeg",
      "https://i.imgur.com/lmT5pxc.jpeg",
      "https://i.imgur.com/2zkzvt6.jpeg",
      "https://i.imgur.com/IEM1oiI.jpeg",
      "https://i.imgur.com/VmPTk8h.jpeg",
      "https://i.imgur.com/RCuCc9Z.jpeg",
      "https://i.imgur.com/SVugJ0r.jpeg",
      "https://i.imgur.com/aq7FLR5.jpeg",
      "https://i.imgur.com/Kr1fCRo.jpeg",
      "https://i.imgur.com/fTWRIoU.jpeg",
      "https://i.imgur.com/PFqb3C3.jpeg",
      "https://i.imgur.com/bfAH4v6.jpeg",
      "https://i.imgur.com/itOZgyO.jpeg"
    ],

    "stacks": [
      "JavaScript",
      "React",
      "Next.js",
      "Tailwind CSS",
      "Strapi",
      "MySQL",
      "Node.js"
    ],

    "summary": "Felini Furniture is a fully custom company profile and product showcase website with a built-in CMS, developed end-to-end using Next.js and Strapi.",
    "thumbnail": "https://i.imgur.com/1pfyexg.jpeg",
    "title": "Felini Furniture",
    "year": "2023"
  },

  {
    "description": "Hoteely is a comprehensive SaaS platform for property management, designed to serve hotel owners, property managers, and staff with an all-in-one solution for managing bookings, operations, and revenue. The system includes a custom-built booking engine that integrates seamlessly with popular reservation sources like Booking.com, Agoda, and more, allowing users to manage reservations across multiple channels from a single interface.\n\nThe platform is divided into two core systems: a frontend application for end users and a backend system for internal developers. On the frontend, users can manage multiple properties with features such as tax and policy configuration, room type and inventory management, rate and promotion controls, availability calendars, and staff assignments. It also includes robust modules for billing and invoicing, as well as user and role management to tailor access levels across teams.\n\nThe backend system is used for internal administration and configuration. It provides control over global app settings such as supported languages, feature toggles, and subscription management, enabling a modular approach to platform customization.\n\nI led the frontend development team, working closely with UI/UX designers, backend developers, and QA engineers. I was also responsible for creating a shared component design system using Bit, which helped streamline development, enforce consistency, and improve team collaboration. The frontend was built using TypeScript, React, Next.js, and Sass, ensuring a performant and scalable architecture. Throughout the project, I collaborated with a diverse, multinational team, contributing to a highly communicative and culturally rich development environment.",

    "images": [
      "https://i.imgur.com/g4aqAKH.png",
      "https://i.imgur.com/l8yAwl8.png",
      "https://i.imgur.com/VpQEKcE.png",
      "https://i.imgur.com/by8icVh.png",
      "https://i.imgur.com/l4Z49nS.png",
      "https://i.imgur.com/nfr70WT.png",
      "https://i.imgur.com/7OPO2uG.png",
      "https://i.imgur.com/CBJ3Vx6.png"
    ],

    "stacks": ["JavaScript", "TypeScript", "React", "Next.js", "Sass", "Bit"],

    "summary": "Hoteely is a full-featured property management SaaS platform with a custom booking engine. Built using TypeScript, React, Next.js and a component design system using Bit.",

    "thumbnail": "https://i.imgur.com/g4aqAKH.png",
    "title": "Hoteely",
    "year": "2022"
  },

  {
    "description": "Momentum Design was my first personal portfolio website, built entirely from scratch to showcase my work, skills, and experience as a developer. It featured a multi-page layout with a clean, responsive design and a focus on subtle animations to create a smooth and engaging browsing experience.\n\nThe site was developed using Vue, Nuxt, and Tailwind CSS, with all aspects — from design and development to testing and deployment — handled by myself. This project served as both a personal branding tool and a hands-on exploration of modern frontend techniques at the time.",

    "images": [
      "https://i.imgur.com/cI3Gy3s.png",
      "https://i.imgur.com/xT3S01G.png",
      "https://i.imgur.com/hS6e9xc.png",
      "https://i.imgur.com/pkUSRey.png",
      "https://i.imgur.com/t1DYCl5.png",
      "https://i.imgur.com/cxcROkL.png"
    ],

    "stacks": ["JavaScript", "Vue", "Nuxt", "Tailwind CSS", "Sass"],

    "summary": "Momentum Design is the previous version of my portfolio website. It features a multi-page minimalist design built with Vue, Nuxt, and Tailwind CSS, with an emphasis on smooth animations and subtle motions.",

    "thumbnail": "https://i.imgur.com/cI3Gy3s.png",
    "title": "Momentum Design",
    "year": "2021"
  },

  {
    "description": "Flygoal is a real-time sports live score web application designed to deliver fast, detailed, and engaging updates for fans across multiple sports. The platform covers five sports — football, basketball, badminton, tennis, and e-sports — offering users up-to-the-minute live scores, past results, and upcoming match schedules.\n\nUsers can follow live matches in real-time with minute-by-minute event updates, live commentaries, chat threads, and even live streams when available. Each match page includes essential information such as team lineups, venue details, kickoff time, head-to-head stats, match status, and post-match analysis like player ratings and advanced statistics.\n\nBeyond individual matches, users can explore detailed league and tournament information including table standings, fixtures, past results, team news, and rankings. The app also supports tracking individual players, providing personalized insights and updates.\n\nFlygoal includes a user authentication system where users can sign up and follow their favorite teams, tournaments, or players. They receive personalized notifications about key events such as match start times, goals, and other important updates. The backend is powered by PHP Laravel and MySQL, with Firebase used for user authentication and delivering live notifications. The frontend was built using vanilla JavaScript, HTML, and CSS ensuring lightweight performance and broad browser compatibility.",

    "images": [
      "https://i.imgur.com/E9iYEH1.png",
      "https://i.imgur.com/ie2bQM7.png",
      "https://i.imgur.com/MjA35ld.png",
      "https://i.imgur.com/irDlWfb.png",
      "https://i.imgur.com/cwm93wh.png"
    ],

    "stacks": [
      "JavaScript",
      "jQuery",
      "Bootstrap",
      "PHP",
      "Laravel",
      "MySQL",
      "Firebase"
    ],

    "summary": "Flygoal is a real-time multi-sport live score platform featuring rich match data, live updates, and personalized notifications — built using vanilla JavaScript, PHP Laravel, and Firebase.",

    "thumbnail": "https://i.imgur.com/E9iYEH1.png",
    "title": "Flygoal",
    "year": "2019"
  }
]
